/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;

vertices
(
    (-0.5 1 0)
    (0 1 0)
    (1.5 1 0)
    (-0.5 0 0)
    (0 0 0)
    (1.5 0 0)

    (-0.5 1 1)
    (0 1 1)
    (1.5 1 1)
    (-0.5 0 1)
    (0 0 1)
    (1.5 0 1)

    //outlet conditioning
    (2 1 0)
    (2 0 0)
    (2 1 1)
    (2 0 1)
    
);


blocks
(
//    hex (3 4 1 0 9 10 7 6) (20 30 10) simpleGrading (1 5 1) //inlet box
//    hex (4 5 2 1 10 11 8 7) (400 30 10) simpleGrading (1 5 1) //membrane box
//    hex (5 13 12 2 11 15 14 8) (20 30 10) simpleGrading (1 5 1) //outlet box

//    hex (3 4 1 0 9 10 7 6) (10 30 25) simpleGrading (1 5 1) //inlet box
    hex (4 5 2 1 10 11 8 7) (45 30 25) simpleGrading (1 5 1) //membrane box
    hex (5 13 12 2 11 15 14 8) (15 30 25) simpleGrading (1 5 1) //outlet box
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            //(3 0 6 9)
            (4 1 7 10)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (13 12 14 15)            
        );
    }
    
    floor
    {
        type patch;
        faces
        (
            //(0 1 7 6)
            (1 2 8 7)
            (2 12 14 8)            
        );
    }

    membrane
    {
        type patch;
        faces
        (
            (4 5 11 10)
            (5 13 15 11)       
        );
    }
    
    //bottom
    //{
    //    type patch;
    //    faces
    //    (
    //        (3 4 10 9)      
    //    );
    //}

    frontSide
    {
        type patch;
        faces
        (
            //(0 1 4 3)
            (1 2 5 4)
            (2 12 13 5)
        );
    }

    backSide
    {
        type patch;
        faces
        (
            //(6 7 10 9)
            (7 8 11 10)
            (8 14 15 11)
        );
    }
);   

mergePatchPairs
(
);


// ************************************************************************* //
